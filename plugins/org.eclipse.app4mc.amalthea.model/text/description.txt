Model Amalthea

This model description is not a real EMF artifact. It was generated by the
org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's
code generator can be extended.
This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.

Package model <http://app4mc.eclipse.org/amalthea/0.9.5>

  Class Amalthea -> BaseObject
    Attribute /version : EString
    Reference commonElements : CommonElements
    Reference swModel : SWModel
    Reference hwModel : HWModel
    Reference osModel : OSModel
    Reference stimuliModel : StimuliModel
    Reference eventModel : EventModel
    Reference constraintsModel : ConstraintsModel
    Reference propertyConstraintsModel : PropertyConstraintsModel
    Reference mappingModel : MappingModel
    Reference componentsModel : ComponentsModel
    Reference configModel : ConfigModel
    Reference measurementModel : MeasurementModel

  Class CommonElements -> BaseObject
    Reference tags : Tag<<0..*>>
    Reference coreClassifiers : CoreClassifier<<0..*>>
    Reference memoryClassifiers : MemoryClassifier<<0..*>>

  Class BaseObject -> IAnnotatable

  Class ReferableObject -> IReferable

  Class ReferableBaseObject -> IAnnotatable, IReferable

  Class IAnnotatable
    Reference customProperties : CustomProperty<<0..*>>

  Class ITaggable
    Reference tags : Tag<<0..*>>

  Class INamed
    Attribute name : EString

  Class IReferable -> INamed
    Attribute /uniqueName : EString
    Operation getNamePrefix() : EString
    Operation encode(EString) : EString
    Operation validateInvariants(EDiagnosticChain, EMap) : EBoolean

  Class IDisplayName
    Attribute displayName : EString

  Class Tag -> ReferableBaseObject
    Attribute tagType : EString
    Reference /taggedObjects : ITaggable<<0..*>>

  Class Classifier -> ReferableBaseObject
    Attribute description : EString

  Class CoreClassifier -> Classifier

  Class MemoryClassifier -> Classifier

  Class TransmissionPolicy
    Reference chunkSize : DataSize
    Attribute chunkProcessingTicks : EInt
    Attribute transmitRatio : EDouble

  Class Quantity

  Class TimeComparable

  Class Time -> Quantity, Value, TimeComparable
    Attribute value : EBigInteger
    Attribute unit : TimeUnit
    Operation toString() : EString
    Operation compareTo(Time) : EInt
    Operation adjustUnit() : Time
    Operation add(Time) : Time
    Operation subtract(Time) : Time
    Operation multiply(ELong) : Time
    Operation multiply(EDouble) : Time
    Operation divide(Time) : EDouble

  Class Frequency -> Quantity
    Attribute value : NonNegativeDouble
    Attribute unit : FrequencyUnit
    Operation toString() : EString

  Class Voltage -> Quantity
    Attribute value : EDouble
    Attribute unit : VoltageUnit
    Operation toString() : EString

  Class DataSize -> Quantity
    Attribute value : EBigInteger
    Attribute unit : DataSizeUnit
    Operation toString() : EString
    Operation getNumberBits() : ELong
    Operation getNumberBytes() : ELong

  Class DataRateComparable

  Class DataRate -> Quantity, DataRateComparable
    Attribute value : EBigInteger
    Attribute unit : DataRateUnit
    Operation toString() : EString
    Operation compareTo(DataRate) : EInt

  Class CustomProperty
    Attribute key : EString<<1..1>>
    Reference value : Value

  Class Value

  Class ListObject -> Value
    Reference values : Value<<0..*>>

  Class StringObject -> Value
    Attribute value : EString<<1..1>>

  Class BigIntegerObject -> Value
    Attribute value : EBigInteger<<1..1>>

  Class ReferenceObject -> Value
    Reference value : IReferable

  Class IntegerObject -> Value
    Attribute value : EInt<<1..1>>

  Class LongObject -> Value
    Attribute value : ELong<<1..1>>

  Class FloatObject -> Value
    Attribute value : EFloat<<1..1>>

  Class DoubleObject -> Value
    Attribute value : EDouble<<1..1>>

  Class BooleanObject -> Value
    Attribute value : EBoolean<<1..1>>

  Class NumericStatistic

  Class MinAvgMaxStatistic -> NumericStatistic
    Attribute min : EInt
    Attribute avg : EFloat
    Attribute max : EInt
    Operation validateInvariants(EDiagnosticChain, EMap) : EBoolean

  Class SingleValueStatistic -> NumericStatistic
    Attribute value : EFloat

  Class ITimeDeviation
    Operation getLowerBound() : Time
    Operation getUpperBound() : Time
    Operation getAverage() : Time

  Class TimeInterval
    Reference lowerBound : Time<<1..1>>
    Reference upperBound : Time<<1..1>>
    Operation getAverage() : Time
    Operation validateInvariants(EDiagnosticChain, EMap) : EBoolean

  Class TimeConstant -> ITimeDeviation
    Reference value : Time<<1..1>>
    Operation getLowerBound() : Time
    Operation getUpperBound() : Time
    Operation getAverage() : Time

  Class TimeHistogram -> ITimeDeviation
    Reference entries : TimeHistogramEntry<<1..*>>
    Operation getLowerBound() : Time
    Operation getUpperBound() : Time
    Operation getAverage() : Time

  Class TimeHistogramEntry -> TimeInterval
    Attribute occurrences : PositiveLong<<1..1>>

  Class BoundedTimeDistribution -> TimeInterval, ITimeDeviation

  Class TruncatedTimeDistribution -> ITimeDeviation
    Reference lowerBound : Time
    Reference upperBound : Time
    Operation validateInvariants(EDiagnosticChain, EMap) : EBoolean

  Class TimeBoundaries -> BoundedTimeDistribution
    Attribute samplingType : SamplingType

  Class TimeStatistics -> BoundedTimeDistribution
    Reference average : Time<<1..1>>

  Class TimeUniformDistribution -> BoundedTimeDistribution

  Class TimeGaussDistribution -> TruncatedTimeDistribution
    Reference mean : Time<<1..1>>
    Reference sd : Time<<1..1>>
    Operation getAverage() : Time

  Class TimeWeibullEstimatorsDistribution -> BoundedTimeDistribution
    Reference average : Time<<1..1>>
    Attribute pRemainPromille : PositiveDouble<<1..1>>

  Class TimeBetaDistribution -> BoundedTimeDistribution
    Attribute alpha : PositiveDouble<<1..1>>
    Attribute beta : PositiveDouble<<1..1>>
    Operation getAverage() : Time

  Class IDiscreteValueDeviation
    Operation getLowerBound() : ELongObject
    Operation getUpperBound() : ELongObject
    Operation getAverage() : EDouble

  Class DiscreteValueInterval
    Attribute lowerBound : ELongObject<<1..1>>
    Attribute upperBound : ELongObject<<1..1>>
    Operation getAverage() : EDouble
    Operation validateInvariants(EDiagnosticChain, EMap) : EBoolean

  Class DiscreteValueConstant -> IDiscreteValueDeviation
    Attribute value : ELong<<1..1>>
    Operation getLowerBound() : ELongObject
    Operation getUpperBound() : ELongObject
    Operation getAverage() : EDouble

  Class DiscreteValueHistogram -> IDiscreteValueDeviation
    Reference entries : DiscreteValueHistogramEntry<<1..*>>
    Operation getLowerBound() : ELongObject
    Operation getUpperBound() : ELongObject
    Operation getAverage() : EDouble

  Class DiscreteValueHistogramEntry -> DiscreteValueInterval
    Attribute occurrences : PositiveLong<<1..1>>

  Class BoundedDiscreteValueDistribution -> DiscreteValueInterval, IDiscreteValueDeviation

  Class TruncatedDiscreteValueDistribution -> IDiscreteValueDeviation
    Attribute lowerBound : ELongObject
    Attribute upperBound : ELongObject
    Operation validateInvariants(EDiagnosticChain, EMap) : EBoolean

  Class DiscreteValueBoundaries -> BoundedDiscreteValueDistribution
    Attribute samplingType : SamplingType

  Class DiscreteValueStatistics -> BoundedDiscreteValueDistribution
    Attribute average : EDouble<<1..1>>

  Class DiscreteValueUniformDistribution -> BoundedDiscreteValueDistribution

  Class DiscreteValueGaussDistribution -> TruncatedDiscreteValueDistribution
    Attribute mean : EDouble<<1..1>>
    Attribute sd : PositiveDouble<<1..1>>
    Operation getAverage() : EDouble

  Class DiscreteValueWeibullEstimatorsDistribution -> BoundedDiscreteValueDistribution
    Attribute average : EDouble<<1..1>>
    Attribute pRemainPromille : PositiveDouble<<1..1>>

  Class DiscreteValueBetaDistribution -> BoundedDiscreteValueDistribution
    Attribute alpha : PositiveDouble<<1..1>>
    Attribute beta : PositiveDouble<<1..1>>
    Operation getAverage() : EDouble

  Class IContinuousValueDeviation
    Operation getLowerBound() : EDoubleObject
    Operation getUpperBound() : EDoubleObject
    Operation getAverage() : EDouble

  Class ContinuousValueInterval
    Attribute lowerBound : EDoubleObject<<1..1>>
    Attribute upperBound : EDoubleObject<<1..1>>
    Operation getAverage() : EDouble
    Operation validateInvariants(EDiagnosticChain, EMap) : EBoolean

  Class ContinuousValueConstant -> IContinuousValueDeviation
    Attribute value : EDouble<<1..1>>
    Operation getLowerBound() : EDoubleObject
    Operation getUpperBound() : EDoubleObject
    Operation getAverage() : EDouble

  Class ContinuousValueHistogram -> IContinuousValueDeviation
    Reference entries : ContinuousValueHistogramEntry<<1..*>>
    Operation getLowerBound() : EDoubleObject
    Operation getUpperBound() : EDoubleObject
    Operation getAverage() : EDouble

  Class ContinuousValueHistogramEntry -> ContinuousValueInterval
    Attribute occurrences : PositiveLong<<1..1>>

  Class BoundedContinuousValueDistribution -> ContinuousValueInterval, IContinuousValueDeviation

  Class TruncatedContinuousValueDistribution -> IContinuousValueDeviation
    Attribute lowerBound : EDoubleObject
    Attribute upperBound : EDoubleObject
    Operation validateInvariants(EDiagnosticChain, EMap) : EBoolean

  Class ContinuousValueBoundaries -> BoundedContinuousValueDistribution
    Attribute samplingType : SamplingType

  Class ContinuousValueStatistics -> BoundedContinuousValueDistribution
    Attribute average : EDouble<<1..1>>

  Class ContinuousValueUniformDistribution -> BoundedContinuousValueDistribution

  Class ContinuousValueGaussDistribution -> TruncatedContinuousValueDistribution
    Attribute mean : EDouble<<1..1>>
    Attribute sd : PositiveDouble<<1..1>>
    Operation getAverage() : EDouble

  Class ContinuousValueWeibullEstimatorsDistribution -> BoundedContinuousValueDistribution
    Attribute average : EDouble<<1..1>>
    Attribute pRemainPromille : PositiveDouble<<1..1>>

  Class ContinuousValueBetaDistribution -> BoundedContinuousValueDistribution
    Attribute alpha : PositiveDouble<<1..1>>
    Attribute beta : PositiveDouble<<1..1>>
    Operation getAverage() : EDouble

  Class Mode -> ReferableBaseObject

  Class NumericMode -> Mode

  Class EnumMode -> Mode
    Reference literals : ModeLiteral<<0..*>>
    Operation getLiteral(EString) : ModeLiteral

  Class ModeLiteral -> ReferableBaseObject
    Reference containingMode : EnumMode
    Operation getNamePrefix() : EString
    Operation toString() : EString

  Class ComponentsModel -> BaseObject
    Reference components : Component<<0..*>>
    Reference systems : System<<0..*>>

  Class ISystem
    Reference componentInstances : ComponentInstance<<0..*>>
    Reference connectors : Connector<<0..*>>
    Reference groundedPorts : QualifiedPort<<0..*>>
    Reference /innerPorts : QualifiedPort<<0..*>>

  Class Port -> ReferableBaseObject, ITaggable
    Reference containingComponent : Component
    Operation getNamePrefix() : EString

  Class Component -> ReferableBaseObject, ITaggable
    Reference ports : Port<<0..*>>
    Reference tasks : AbstractProcess<<0..*>>
    Reference runnables : Runnable<<0..*>>
    Reference labels : Label<<0..*>>
    Reference semaphores : Semaphore<<0..*>>
    Reference osEvents : OsEvent<<0..*>>

  Class Composite -> Component, ISystem

  Class System -> ReferableBaseObject, ITaggable, ISystem

  Class ComponentInstance -> ReferableBaseObject, ITaggable
    Reference type : Component

  Class Connector -> BaseObject, INamed, ITaggable
    Reference sourcePort : QualifiedPort
    Reference targetPort : QualifiedPort

  Class QualifiedPort -> BaseObject
    Reference instance : ComponentInstance
    Reference port : Port

  Class InterfacePort -> Port
    Attribute interfaceName : EString
    Attribute kind : InterfaceKind

  Class ConfigModel -> BaseObject
    Reference eventsToTrace : EventConfig<<0..*>>

  Class EventConfig -> BaseObject, INamed
    Reference event : EntityEvent<<1..1>>

  Class ConstraintsModel -> BaseObject
    Reference eventChains : EventChain<<0..*>>
    Reference timingConstraints : TimingConstraint<<0..*>>
    Reference affinityConstraints : AffinityConstraint<<0..*>>
    Reference runnableSequencingConstraints : RunnableSequencingConstraint<<0..*>>
    Reference dataAgeConstraints : DataAgeConstraint<<0..*>>
    Reference requirements : Requirement<<0..*>>
    Reference dataCoherencyGroups : DataCoherencyGroup<<0..*>>
    Reference dataStabilityGroups : DataStabilityGroup<<0..*>>
    Reference physicalSectionConstraints : PhysicalSectionConstraint<<0..*>>

  Class RunnableSequencingConstraint -> ReferableBaseObject
    Attribute orderType : RunnableOrderType
    Reference runnableGroups : RunnableEntityGroup<<2..*>>
    Reference processScope : AbstractProcess<<0..*>>

  Class AffinityConstraint -> ReferableBaseObject

  Class SeparationConstraint -> AffinityConstraint

  Class PairingConstraint -> AffinityConstraint

  Class ProcessConstraint
    Reference target : ProcessConstraintTarget

  Class RunnableConstraint
    Reference target : RunnableConstraintTarget

  Class DataConstraint
    Reference target : DataConstraintTarget

  Class RunnableSeparationConstraint -> SeparationConstraint, RunnableConstraint, BaseObject
    Reference groups : RunnableGroup<<1..2>>

  Class ProcessSeparationConstraint -> SeparationConstraint, ProcessConstraint, BaseObject
    Reference groups : ProcessGroup<<1..2>>

  Class DataSeparationConstraint -> SeparationConstraint, DataConstraint, BaseObject
    Reference groups : LabelEntityGroup<<1..2>>

  Class RunnablePairingConstraint -> PairingConstraint, RunnableConstraint, BaseObject
    Reference group : RunnableGroup<<1..1>>

  Class ProcessPairingConstraint -> PairingConstraint, ProcessConstraint, BaseObject
    Reference group : ProcessGroup<<1..1>>

  Class DataPairingConstraint -> PairingConstraint, DataConstraint, BaseObject
    Reference group : LabelGroup<<1..1>>

  Class RunnableConstraintTarget

  Class ProcessConstraintTarget

  Class DataConstraintTarget

  Class TargetMemory -> DataConstraintTarget, BaseObject
    Reference memories : Memory<<0..*>>

  Class TargetCore -> RunnableConstraintTarget, ProcessConstraintTarget, BaseObject
    Reference cores : ProcessingUnit<<0..*>>

  Class TargetScheduler -> RunnableConstraintTarget, ProcessConstraintTarget, BaseObject
    Reference schedulers : Scheduler<<0..*>>

  Class LabelGroup

  Class RunnableGroup

  Class ProcessGroup

  Class LabelEntityGroup -> LabelGroup, BaseObject
    Reference labels : Label<<1..*>>

  Class RunnableEntityGroup -> RunnableGroup, BaseObject
    Reference runnables : Runnable<<1..*>>

  Class ProcessEntityGroup -> ProcessGroup, BaseObject
    Reference processes : Process<<1..*>>

  Class TagGroup -> RunnableGroup, ProcessGroup, BaseObject
    Reference tag : Tag<<1..1>>

  Class AbstractEventChain -> BaseObject, INamed
    Reference stimulus : Event
    Reference response : Event
    Reference segments : EventChainItem<<0..*>>
    Reference strands : EventChainItem<<0..*>>

  Class EventChain -> AbstractEventChain, IReferable

  Class SubEventChain -> AbstractEventChain

  Class EventChainItem
    Operation getEventChain() : AbstractEventChain

  Class EventChainReference -> BaseObject, EventChainItem
    Reference eventChain : EventChain<<1..1>>

  Class EventChainContainer -> BaseObject, EventChainItem
    Reference eventChain : SubEventChain<<1..1>>

  Class TimingConstraint -> ReferableBaseObject

  Class PhysicalSectionConstraint -> ReferableBaseObject
    Reference section : Section<<1..1>>
    Reference memories : Memory<<1..*>>

  Class SynchronizationConstraint -> TimingConstraint
    Attribute multipleOccurrencesAllowed : EBoolean
    Reference tolerance : Time<<1..1>>

  Class EventSynchronizationConstraint -> SynchronizationConstraint
    Reference events : EntityEvent<<1..*>>

  Class EventChainSynchronizationConstraint -> SynchronizationConstraint
    Reference scope : EventChain<<2..2>>
    Attribute type : SynchronizationType

  Class DelayConstraint -> TimingConstraint
    Attribute mappingType : MappingType
    Reference source : EntityEvent<<1..1>>
    Reference target : EntityEvent<<1..1>>
    Reference upper : Time
    Reference lower : Time

  Class EventChainLatencyConstraint -> TimingConstraint
    Reference scope : EventChain<<1..1>>
    Attribute type : LatencyType
    Reference minimum : Time
    Reference maximum : Time

  Class RepetitionConstraint -> TimingConstraint
    Reference event : EntityEvent<<1..1>>
    Attribute span : EInt
    Reference lower : Time
    Reference upper : Time
    Reference jitter : Time
    Reference period : Time

  Class DataAgeConstraint -> ReferableBaseObject
    Reference runnable : Runnable<<1..1>>
    Reference label : Label<<1..1>>
    Reference dataAge : DataAge<<1..1>>

  Class DataAge

  Class DataAgeCycle -> DataAge
    Attribute minimumCycle : EInt
    Attribute maximumCycle : EInt

  Class DataAgeTime -> DataAge
    Reference minimumTime : Time
    Reference maximumTime : Time

  Class Requirement -> BaseObject, INamed
    Attribute severity : Severity
    Reference limit : RequirementLimit<<1..1>>

  Class ProcessRequirement -> Requirement
    Reference process : AbstractProcess<<1..1>>

  Class RunnableRequirement -> Requirement
    Reference runnable : Runnable<<1..1>>

  Class ArchitectureRequirement -> Requirement
    Reference component : Component<<1..1>>

  Class ProcessChainRequirement -> Requirement
    Reference processChain : ProcessChain<<1..1>>

  Class RequirementLimit
    Attribute limitType : LimitType

  Class CPUPercentageRequirementLimit -> RequirementLimit
    Attribute metric : CPUPercentageMetric
    Attribute limitValue : EDouble
    Reference hardwareContext : ProcessingUnit

  Class FrequencyRequirementLimit -> RequirementLimit
    Attribute metric : FrequencyMetric
    Reference limitValue : Frequency<<1..1>>

  Class PercentageRequirementLimit -> RequirementLimit
    Attribute metric : PercentageMetric
    Attribute limitValue : EDouble

  Class CountRequirementLimit -> RequirementLimit
    Attribute metric : CountMetric
    Attribute limitValue : EInt

  Class TimeRequirementLimit -> RequirementLimit
    Attribute metric : TimeMetric
    Reference limitValue : Time<<1..1>>

  Class DataCoherencyGroup -> ReferableBaseObject
    Reference labels : Label<<1..*>>
    Reference scope : DataGroupScope
    Attribute direction : CoherencyDirection

  Class DataStabilityGroup -> ReferableBaseObject
    Reference labels : Label<<1..*>>
    Reference scope : DataGroupScope

  Class DataGroupScope

  Class ProcessScope -> DataGroupScope
    Reference process : AbstractProcess

  Class RunnableScope -> DataGroupScope
    Reference runnable : Runnable

  Class ComponentScope -> DataGroupScope
    Reference component : Component

  Class EventModel -> BaseObject
    Reference events : Event<<0..*>>

  Class Event -> ReferableBaseObject, ITaggable
    Attribute description : EString

  Class EventSet -> Event
    Reference events : EntityEvent<<1..*>>

  Class EntityEvent -> Event

  Class TriggerEvent -> EntityEvent

  Class CustomEvent -> TriggerEvent
    Attribute eventType : EString
    Reference /explicitTriggers : CustomEventTrigger<<0..*>>

  Class StimulusEvent -> EntityEvent
    Reference entity : Stimulus

  Class ProcessEvent -> EntityEvent
    Attribute eventType : ProcessEventType
    Reference entity : Process
    Reference processingUnit : ProcessingUnit

  Class ProcessChainEvent -> EntityEvent
    Attribute eventType : ProcessEventType
    Reference entity : ProcessChain
    Reference processingUnit : ProcessingUnit

  Class RunnableEvent -> TriggerEvent
    Attribute eventType : RunnableEventType
    Reference entity : Runnable
    Reference process : Process
    Reference processingUnit : ProcessingUnit

  Class LabelEvent -> TriggerEvent
    Attribute eventType : LabelEventType
    Reference entity : Label
    Reference runnable : Runnable
    Reference process : Process

  Class ChannelEvent -> TriggerEvent
    Attribute eventType : ChannelEventType
    Reference entity : Channel
    Reference runnable : Runnable
    Reference process : Process

  Class SemaphoreEvent -> EntityEvent
    Attribute eventType : SemaphoreEventType
    Reference entity : Semaphore
    Reference runnable : Runnable
    Reference process : Process
    Reference processingUnit : ProcessingUnit

  Class ComponentEvent -> EntityEvent
    Attribute eventType : ComponentEventType
    Reference entity : Component

  Class HWModel -> BaseObject
    Reference definitions : HwDefinition<<0..*>>
    Reference featureCategories : HwFeatureCategory<<0..*>>
    Reference structures : HwStructure<<0..*>>
    Reference domains : HwDomain<<0..*>>

  Class HwStructure -> ReferableBaseObject, ITaggable
    Attribute structureType : StructureType
    Reference ports : HwPort<<0..*>>
    Reference structures : HwStructure<<0..*>>
    Reference modules : HwModule<<0..*>>
    Reference connections : HwConnection<<0..*>>
    Reference /innerPorts : HwPort<<0..*>>

  Class HwModule -> ReferableBaseObject, ITaggable
    Reference ports : HwPort<<0..*>>
    Reference powerDomain : PowerDomain
    Reference frequencyDomain : FrequencyDomain

  Class HwDomain -> ReferableBaseObject, ITaggable

  Class FrequencyDomain -> HwDomain
    Reference defaultValue : Frequency
    Attribute clockGating : EBoolean

  Class PowerDomain -> HwDomain
    Reference defaultValue : Voltage
    Attribute powerGating : EBoolean

  Class ProcessingUnit -> HwModule, HwDestination, HwPathElement
    Reference definition : ProcessingUnitDefinition
    Reference accessElements : HwAccessElement<<0..*>>
    Reference caches : Cache<<0..*>>

  Class Memory -> HwModule, HwDestination
    Reference definition : MemoryDefinition
    Reference /mappings : MemoryMapping<<0..*>>

  Class Cache -> HwModule, HwPathElement
    Reference definition : CacheDefinition

  Class HwFeatureCategory -> ReferableBaseObject
    Attribute featureType : HwFeatureType
    Attribute description : EString
    Reference features : HwFeature<<0..*>>

  Class HwFeature -> ReferableBaseObject
    Reference containingCategory : HwFeatureCategory
    Attribute value : EDouble
    Operation getNamePrefix() : EString
    Operation toString() : EString

  Class HwPort -> ReferableBaseObject, ITaggable
    Attribute bitWidth : EInt
    Attribute priority : EInt
    Attribute portType : PortType
    Attribute portInterface : PortInterface
    Attribute /delegated : EBoolean
    Reference /connections : HwConnection<<0..*>>
    Operation getNamePrefix() : EString

  Class ConnectionHandler -> HwModule, HwPathElement
    Reference definition : ConnectionHandlerDefinition
    Reference internalConnections : HwConnection<<0..*>>

  Class HwConnection -> ReferableBaseObject, HwPathElement, ITaggable
    Reference readLatency : IDiscreteValueDeviation
    Reference writeLatency : IDiscreteValueDeviation
    Reference dataRate : DataRate
    Reference port1 : HwPort
    Reference port2 : HwPort
    Attribute /internal : EBoolean
    Operation getNamePrefix() : EString
    Operation getPorts() : HwPort<<0..*>>

  Class HwAccessElement -> ITaggable, INamed
    Reference source : ProcessingUnit
    Reference destination : HwDestination<<1..1>>
    Reference accessPath : HwAccessPath
    Reference readLatency : IDiscreteValueDeviation
    Reference writeLatency : IDiscreteValueDeviation
    Reference dataRate : DataRate

  Class HwDefinition -> ReferableBaseObject, ITaggable

  Class ProcessingUnitDefinition -> HwDefinition
    Attribute puType : PuType
    Reference features : HwFeature<<0..*>>
    Reference classifiers : CoreClassifier<<0..*>>

  Class ConnectionHandlerDefinition -> HwDefinition
    Attribute policy : SchedPolicy
    Reference readLatency : IDiscreteValueDeviation
    Reference writeLatency : IDiscreteValueDeviation
    Reference dataRate : DataRate
    Attribute maxBurstSize : PositiveInt
    Attribute maxConcurrentTransfers : PositiveInt

  Class MemoryDefinition -> HwDefinition
    Reference size : DataSize
    Reference accessLatency : IDiscreteValueDeviation
    Reference dataRate : DataRate
    Attribute memoryType : MemoryType
    Reference classifiers : MemoryClassifier<<0..*>>

  Class CacheDefinition -> HwDefinition
    Reference size : DataSize
    Reference lineSize : DataSize
    Reference accessLatency : IDiscreteValueDeviation
    Attribute cacheType : CacheType
    Attribute writeStrategy : WriteStrategy
    Attribute nWays : EInt
    Attribute coherency : EBoolean
    Attribute exclusive : EBoolean
    Attribute hitRate : EDouble

  Class HwPath
    Reference /source : ProcessingUnit
    Reference /destination : HwDestination
    Operation getContainingAccessElement() : HwAccessElement

  Class HwAccessPath -> HwPath, INamed
    Reference containingAccessElement : HwAccessElement
    Reference pathElements : HwPathElement<<1..*>>
    Attribute startAddress : Address
    Attribute endAddress : Address
    Attribute memOffset : Address

  Class HwPathElement -> IReferable
    Operation getPorts() : HwPort<<0..*>>

  Class HwDestination -> IReferable
    Operation getPorts() : HwPort<<0..*>>

  Class MappingModel -> BaseObject
    Reference schedulerAllocation : SchedulerAllocation<<0..*>>
    Reference runnableAllocation : RunnableAllocation<<0..*>>
    Reference taskAllocation : TaskAllocation<<0..*>>
    Reference isrAllocation : ISRAllocation<<0..*>>
    Reference memoryMapping : MemoryMapping<<0..*>>
    Reference physicalSectionMapping : PhysicalSectionMapping<<0..*>>
    Attribute addressMappingType : MemoryAddressMappingType

  Class SchedulerAllocation -> BaseObject
    Reference scheduler : Scheduler<<1..1>>
    Reference responsibility : ProcessingUnit<<1..*>>
    Reference executingPU : ProcessingUnit

  Class TaskAllocation -> BaseObject
    Reference task : Task<<1..1>>
    Reference scheduler : TaskScheduler<<1..1>>
    Reference affinity : ProcessingUnit<<0..*>>
    Reference schedulingParameters : SchedulingParameters
    Reference parameterExtensions : ParameterExtension<<0..*>>

  Class ISRAllocation -> BaseObject
    Reference isr : ISR<<1..1>>
    Reference controller : InterruptController<<1..1>>
    Attribute priority : EIntegerObject

  Class RunnableAllocation -> BaseObject
    Reference scheduler : Scheduler<<1..1>>
    Reference entity : Runnable<<1..1>>

  Class MemoryMapping -> BaseObject
    Reference abstractElement : AbstractMemoryElement<<1..1>>
    Reference memory : Memory
    Attribute memoryPositionAddress : Address

  Class PhysicalSectionMapping -> ReferableBaseObject
    Reference origin : Section<<1..*>>
    Reference memory : Memory<<1..1>>
    Attribute startAddress : Address
    Attribute endAddress : Address
    Reference labels : Label<<0..*>>
    Reference runEntities : Runnable<<0..*>>

  Class OSModel -> BaseObject
    Reference semaphores : Semaphore<<0..*>>
    Reference operatingSystems : OperatingSystem<<0..*>>
    Reference osOverheads : OsOverhead<<0..*>>

  Class OsDataConsistency -> BaseObject
    Attribute mode : OsDataConsistencyMode
    Reference dataStability : DataStability
    Reference nonAtomicDataCoherency : NonAtomicDataCoherency

  Class DataStability
    Attribute enabled : EBoolean
    Attribute algorithm : EString
    Attribute accessMultiplicity : AccessMultiplicity
    Attribute level : DataStabilityLevel

  Class NonAtomicDataCoherency
    Attribute enabled : EBoolean
    Attribute algorithm : EString
    Attribute accessMultiplicity : AccessMultiplicity

  Class Semaphore -> ReferableBaseObject
    Attribute semaphoreType : SemaphoreType
    Attribute initialValue : EInt
    Attribute maxValue : EInt
    Attribute priorityCeilingProtocol : EBoolean
    Reference /semaphoreAccesses : SemaphoreAccess<<0..*>>
    Reference /referringComponents : Component<<0..*>>

  Class Scheduler -> ReferableBaseObject
    Reference computationItems : ComputationItem<<0..*>>
    Reference /schedulerAllocations : SchedulerAllocation<<0..*>>
    Reference /runnableAllocations : RunnableAllocation<<0..*>>
    Operation getSchedulingAlgorithm() : Algorithm

  Class TaskScheduler -> Scheduler
    Reference schedulingAlgorithm : TaskSchedulingAlgorithm
    Reference parentAssociation : SchedulerAssociation
    Reference /childAssociations : SchedulerAssociation<<0..*>>
    Reference /taskAllocations : TaskAllocation<<0..*>>
    Reference /parentScheduler : TaskScheduler
    Reference /childSchedulers : TaskScheduler<<0..*>>

  Class SchedulerAssociation
    Reference child : TaskScheduler
    Reference parent : TaskScheduler
    Reference schedulingParameters : SchedulingParameters
    Reference parameterExtensions : ParameterExtension<<0..*>>

  Class InterruptController -> Scheduler
    Reference schedulingAlgorithm : InterruptSchedulingAlgorithm
    Reference /isrAllocations : ISRAllocation<<0..*>>

  Class SchedulingParameters
    Attribute priority : EIntegerObject
    Reference minBudget : Time
    Reference maxBudget : Time
    Reference replenishment : Time

  Class ParameterExtension
    Attribute key : EString<<1..1>>
    Attribute value : EString<<1..1>>

  Class Algorithm -> BaseObject

  Class InterruptSchedulingAlgorithm -> Algorithm

  Class TaskSchedulingAlgorithm -> Algorithm

  Class FixedPriority -> TaskSchedulingAlgorithm

  Class FixedPriorityPreemptive -> FixedPriority

  Class FixedPriorityPreemptiveWithBudgetEnforcement -> FixedPriority

  Class OSEK -> FixedPriority

  Class DeadlineMonotonic -> FixedPriority

  Class RateMonotonic -> FixedPriority

  Class Pfair -> TaskSchedulingAlgorithm
    Attribute quantSizeNs : EInt

  Class PfairPD2 -> Pfair

  Class PartlyPFairPD2 -> Pfair

  Class EarlyReleaseFairPD2 -> Pfair

  Class PartlyEarlyReleaseFairPD2 -> Pfair

  Class DynamicPriority -> TaskSchedulingAlgorithm

  Class LeastLocalRemainingExecutionTimeFirst -> DynamicPriority

  Class EarliestDeadlineFirst -> DynamicPriority

  Class PriorityBasedRoundRobin -> DynamicPriority

  Class ReservationBasedServer -> TaskSchedulingAlgorithm

  Class DeferrableServer -> ReservationBasedServer

  Class PollingPeriodicServer -> ReservationBasedServer

  Class SporadicServer -> ReservationBasedServer

  Class ConstantBandwidthServer -> ReservationBasedServer

  Class ConstantBandwidthServerWithCASH -> ReservationBasedServer

  Class Grouping -> TaskSchedulingAlgorithm

  Class UserSpecificSchedulingAlgorithm -> TaskSchedulingAlgorithm, InterruptSchedulingAlgorithm
    Reference parameterExtensions : ParameterExtension<<0..*>>

  Class PriorityBased -> InterruptSchedulingAlgorithm

  Class OperatingSystem -> BaseObject, INamed
    Reference overhead : OsOverhead
    Reference taskSchedulers : TaskScheduler<<0..*>>
    Reference interruptControllers : InterruptController<<0..*>>
    Reference osDataConsistency : OsDataConsistency

  Class VendorOperatingSystem -> OperatingSystem
    Attribute osName : EString
    Attribute vendor : EString
    Attribute version : EString

  Class OsOverhead -> ReferableBaseObject
    Reference apiOverhead : OsAPIOverhead
    Reference isrCategory1Overhead : OsISROverhead
    Reference isrCategory2Overhead : OsISROverhead

  Class OsAPIOverhead -> BaseObject
    Reference apiSendMessage : Ticks
    Reference apiTerminateTask : Ticks
    Reference apiSchedule : Ticks
    Reference apiRequestResource : Ticks
    Reference apiReleaseResource : Ticks
    Reference apiSetEvent : Ticks
    Reference apiWaitEvent : Ticks
    Reference apiClearEvent : Ticks
    Reference apiActivateTask : Ticks
    Reference apiEnforcedMigration : Ticks
    Reference apiSuspendOsInterrupts : Ticks
    Reference apiResumeOsInterrupts : Ticks
    Reference apiRequestSpinlock : Ticks
    Reference apiReleaseSpinlock : Ticks
    Reference apiSenderReceiverRead : Ticks
    Reference apiSenderReceiverWrite : Ticks
    Reference apiSynchronousServerCallPoint : Ticks
    Reference apiIocRead : Ticks
    Reference apiIocWrite : Ticks

  Class OsISROverhead -> BaseObject
    Reference preExecutionOverhead : Ticks
    Reference postExecutionOverhead : Ticks

  Class PropertyConstraintsModel -> BaseObject
    Reference allocationConstraints : CoreAllocationConstraint<<0..*>>
    Reference mappingConstraints : MemoryMappingConstraint<<0..*>>

  Class CoreAllocationConstraint -> BaseObject
    Reference coreClassification : CoreClassification

  Class MemoryMappingConstraint -> BaseObject
    Reference memoryClassification : MemoryClassification

  Class ProcessAllocationConstraint -> CoreAllocationConstraint
    Reference process : Process

  Class ProcessPrototypeAllocationConstraint -> CoreAllocationConstraint
    Reference processPrototype : ProcessPrototype

  Class RunnableAllocationConstraint -> CoreAllocationConstraint
    Reference runnable : Runnable

  Class AbstractElementMappingConstraint -> MemoryMappingConstraint
    Reference abstractElement : AbstractMemoryElement

  Class Classification -> BaseObject
    Attribute condition : Condition
    Attribute grouping : GroupingType

  Class CoreClassification -> Classification
    Reference classifiers : CoreClassifier<<0..*>>

  Class MemoryClassification -> Classification
    Reference classifiers : MemoryClassifier<<0..*>>

  Class StimuliModel -> BaseObject
    Reference stimuli : Stimulus<<0..*>>
    Reference clocks : Clock<<0..*>>

  Class Stimulus -> ReferableBaseObject, ITaggable
    Reference setModeValueList : ModeValueList
    Reference executionCondition : ModeConditionDisjunction
    Reference /affectedProcesses : Process<<0..*>>

  Class ModeValueList -> BaseObject
    Reference entries : ModeAssignment<<0..*>>

  Class ModeValueMapEntry
    Reference key : ModeLabel<<1..1>>
    Attribute value : EString<<1..1>>

  Class ModeValue -> BaseObject
    Reference label : ModeLabel<<1..1>>
    Attribute value : EString<<1..1>>
    Operation validateInvariants(EDiagnosticChain, EMap) : EBoolean
    Operation getLiteral() : ModeLiteral
    Operation getInteger() : EIntegerObject

  Class ModeAssignment -> ModeValue

  Class ModeConditionDisjunction -> BaseObject
    Reference entries : ModeConditionDisjunctionEntry<<1..*>>
    Operation isSatisfiedBy(ModeValueMapEntry<<0..*>>) : EBoolean

  Class ModeConditionDisjunctionEntry -> BaseObject
    Operation isSatisfiedBy(ModeValueMapEntry<<0..*>>) : EBoolean

  Class ModeCondition -> ModeValue, ModeConditionDisjunctionEntry
    Attribute relation : RelationalOperator
    Operation isSatisfiedBy(ModeValueMapEntry<<0..*>>) : EBoolean

  Class ModeConditionConjunction -> ModeConditionDisjunctionEntry
    Reference entries : ModeCondition<<1..*>>
    Operation isSatisfiedBy(ModeValueMapEntry<<0..*>>) : EBoolean

  Class FixedPeriodic
    Reference offset : Time
    Reference recurrence : Time

  Class PeriodicStimulus -> Stimulus, FixedPeriodic
    Reference jitter : ITimeDeviation
    Reference minDistance : Time

  Class RelativePeriodicStimulus -> Stimulus
    Reference offset : Time
    Reference nextOccurrence : ITimeDeviation

  Class VariableRateStimulus -> Stimulus
    Reference step : Time<<1..1>>
    Reference occurrencesPerStep : IContinuousValueDeviation
    Attribute maxIncreasePerStep : EDoubleObject
    Attribute maxDecreasePerStep : EDoubleObject
    Reference scenario : Scenario

  Class Scenario -> BaseObject
    Reference recurrence : Time<<1..1>>
    Reference clock : Clock

  Class PeriodicSyntheticStimulus -> Stimulus, FixedPeriodic
    Reference occurrenceTimes : Time<<1..*>>

  Class CustomStimulus -> Stimulus
    Attribute description : EString

  Class SingleStimulus -> Stimulus
    Reference occurrence : Time<<1..1>>

  Class InterProcessStimulus -> Stimulus
    Reference counter : Counter
    Reference /explicitTriggers : InterProcessTrigger<<0..*>>

  Class PeriodicBurstStimulus -> Stimulus, FixedPeriodic
    Reference burstLength : Time<<1..1>>
    Reference occurrenceMinDistance : Time
    Attribute occurrenceCount : EInt

  Class EventStimulus -> Stimulus
    Reference triggeringEvents : TriggerEvent<<1..*>>
    Reference counter : Counter

  Class ArrivalCurveStimulus -> Stimulus
    Reference entries : ArrivalCurveEntry<<1..*>>

  Class ArrivalCurveEntry -> BaseObject
    Attribute numberOfOccurrences : EInt
    Reference lowerTimeBorder : Time
    Reference upperTimeBorder : Time

  Class Clock -> ReferableBaseObject

  Class ClockFunction -> Clock
    Attribute curveType : CurveType
    Reference period : Time<<1..1>>
    Reference peakToPeak : Frequency<<1..1>>
    Reference xOffset : Time
    Reference yOffset : Frequency

  Class ClockStepList -> Clock
    Reference entries : ClockStep<<1..*>>
    Reference period : Time

  Class ClockStep -> BaseObject
    Reference frequency : Frequency<<1..1>>
    Reference time : Time<<1..1>>

  Class SWModel -> BaseObject
    Reference isrs : ISR<<0..*>>
    Reference tasks : Task<<0..*>>
    Reference runnables : Runnable<<0..*>>
    Reference labels : Label<<0..*>>
    Reference channels : Channel<<0..*>>
    Reference processPrototypes : ProcessPrototype<<0..*>>
    Reference sections : Section<<0..*>>
    Reference activations : Activation<<0..*>>
    Reference events : OsEvent<<0..*>>
    Reference typeDefinitions : TypeDefinition<<0..*>>
    Reference customEntities : CustomEntity<<0..*>>
    Reference processChains : ProcessChain<<0..*>>
    Reference modes : Mode<<0..*>>
    Reference modeLabels : ModeLabel<<0..*>>
    Operation modeLiteral(EString, EString) : ModeLiteral

  Class AbstractMemoryElement -> ReferableBaseObject, ITaggable
    Reference size : DataSize
    Reference /mappings : MemoryMapping<<0..*>>

  Class AbstractProcess -> AbstractMemoryElement
    Reference /referringComponents : Component<<0..*>>

  Class CustomEntity -> AbstractMemoryElement
    Attribute typeName : EString

  Class ProcessChain -> ReferableBaseObject
    Reference processes : Process<<0..*>>

  Class Process -> AbstractProcess
    Reference callGraph : CallGraph
    Reference stimuli : Stimulus<<0..*>>

  Class ICallGraphItemContainer
    Reference items : CallGraphItem<<0..*>>

  Class CallGraph -> BaseObject, ICallGraphItemContainer

  Class CallGraphItem -> BaseObject
    Reference /containingProcess : Process
    Reference /containingRunnable : Runnable

  Class ModeSwitch -> CallGraphItem
    Reference entries : ModeSwitchEntry<<0..*>>
    Reference defaultEntry : ModeSwitchDefault

  Class ModeSwitchEntry -> BaseObject, INamed, ICallGraphItemContainer
    Reference condition : ModeConditionDisjunction<<1..1>>

  Class ModeSwitchDefault -> BaseObject, ICallGraphItemContainer

  Class ProbabilitySwitch -> CallGraphItem
    Reference entries : ProbabilitySwitchEntry<<0..*>>

  Class ProbabilitySwitchEntry -> BaseObject, ICallGraphItemContainer
    Attribute probability : EDouble

  Class Counter -> BaseObject
    Attribute prescaler : PositiveLong
    Attribute offset : ELong

  Class WaitEvent -> CallGraphItem
    Reference eventMask : EventMask
    Attribute maskType : WaitEventType
    Attribute waitingBehaviour : WaitingBehaviour
    Reference counter : Counter

  Class SetEvent -> CallGraphItem
    Reference eventMask : EventMask
    Reference process : Process
    Reference counter : Counter

  Class ClearEvent -> CallGraphItem
    Reference eventMask : EventMask
    Reference counter : Counter

  Class EventMask -> BaseObject
    Reference events : OsEvent<<0..*>>

  Class OsEvent -> ReferableBaseObject, ITaggable
    Attribute communicationOverheadInBit : EInt
    Reference /referringComponents : Component<<0..*>>

  Class InterProcessTrigger -> CallGraphItem
    Reference stimulus : InterProcessStimulus<<1..1>>
    Reference counter : Counter

  Class EnforcedMigration -> CallGraphItem
    Reference resourceOwner : TaskScheduler<<1..1>>

  Class SchedulePoint -> CallGraphItem

  Class TerminateProcess -> CallGraphItem
    Reference counter : Counter

  Class Task -> Process
    Attribute preemption : Preemption
    Attribute multipleTaskActivationLimit : EInt

  Class ISR -> Process
    Attribute category : ISRCategory

  Class ProcessPrototype -> AbstractProcess
    Attribute preemption : Preemption
    Reference firstRunnable : Runnable
    Reference lastRunnable : Runnable
    Reference accessPrecedenceSpec : AccessPrecedenceSpec<<0..*>>
    Reference orderPrecedenceSpec : OrderPrecedenceSpec<<0..*>>
    Reference chainedPrototypes : ChainedProcessPrototype<<0..*>>
    Reference activation : Activation
    Reference runnableCalls : RunnableCall<<0..*>>

  Class ChainedProcessPrototype -> BaseObject
    Reference prototype : ProcessPrototype<<1..1>>
    Attribute apply : EInt
    Attribute offset : EInt

  Class GeneralPrecedence -> BaseObject
    Reference origin : Runnable
    Reference target : Runnable

  Class AccessPrecedenceSpec -> GeneralPrecedence
    Reference label : Label<<1..1>>
    Attribute orderType : AccessPrecedenceType

  Class OrderPrecedenceSpec -> GeneralPrecedence
    Attribute orderType : OrderType

  Class DataDependency -> BaseObject
    Reference labels : Label<<0..*>>
    Reference parameters : RunnableParameter<<0..*>>
    Reference callArguments : CallArgument<<0..*>>
    Reference /containingRunnable : Runnable

  Class RunnableParameter -> ReferableBaseObject
    Reference containingRunnable : Runnable
    Attribute direction : DirectionType
    Reference dataType : TypeDefinition
    Reference dependsOn : DataDependency
    Operation getNamePrefix() : EString
    Operation toString() : EString

  Class Runnable -> AbstractMemoryElement
    Reference executionCondition : ModeConditionDisjunction
    Reference parameters : RunnableParameter<<0..*>>
    Reference callGraph : CallGraph
    Reference activations : Activation<<0..*>>
    Attribute callback : EBoolean
    Attribute service : EBoolean
    Attribute asilLevel : ASILType
    Reference section : Section
    Reference /runnableCalls : RunnableCall<<0..*>>
    Reference /referringComponents : Component<<0..*>>
    Operation getRunnableItems() : CallGraphItem<<0..*>>
    Operation getFirstActivation() : Activation

  Class Label -> AbstractMemoryElement, IDisplayName
    Reference dataType : DataType
    Attribute constant : EBoolean
    Attribute bVolatile : EBoolean
    Attribute dataStability : LabelDataStability
    Attribute stabilityLevel : DataStabilityLevel
    Reference section : Section
    Reference /labelAccesses : LabelAccess<<0..*>>
    Reference /referringComponents : Component<<0..*>>

  Class Channel -> AbstractMemoryElement, IDisplayName
    Reference elementType : DataType
    Attribute defaultElements : EInt
    Attribute maxElements : EInt
    Reference /channelAccesses : ChannelAccess<<0..*>>

  Class ModeLabel -> AbstractMemoryElement, IDisplayName
    Reference mode : Mode<<1..1>>
    Attribute initialValue : EString
    Operation validateInvariants(EDiagnosticChain, EMap) : EBoolean
    Operation isEnum() : EBoolean
    Operation isNumeric() : EBoolean

  Class Section -> ReferableBaseObject
    Attribute asilLevel : ASILType
    Reference /labels : Label<<0..*>>
    Reference /runnables : Runnable<<0..*>>

  Class ComputationItem -> CallGraphItem

  Class ExecutionNeed -> CallGraphItem
    Reference needs : NeedEntry<<0..*>>

  Class NeedEntry
    Attribute key : EString<<1..1>>
    Reference value : IDiscreteValueDeviation<<1..1>>

  Class Ticks -> ComputationItem
    Reference default : IDiscreteValueDeviation
    Reference extended : TicksEntry<<0..*>>

  Class TicksEntry
    Reference key : ProcessingUnitDefinition<<1..1>>
    Reference value : IDiscreteValueDeviation<<1..1>>

  Class ModeLabelAccess -> CallGraphItem
    Reference data : ModeLabel<<1..1>>
    Attribute access : ModeLabelAccessEnum
    Attribute value : EString
    Attribute step : PositiveInt
    Operation validateInvariants(EDiagnosticChain, EMap) : EBoolean

  Class LabelAccess -> ComputationItem, ITaggable
    Reference data : Label<<1..1>>
    Attribute access : LabelAccessEnum
    Reference statistic : LabelAccessStatistic
    Reference transmissionPolicy : TransmissionPolicy
    Attribute dataStability : LabelAccessDataStability
    Attribute implementation : LabelAccessImplementation
    Reference dependsOn : DataDependency

  Class ChannelAccess -> CallGraphItem
    Reference data : Channel<<1..1>>
    Attribute elements : EInt
    Reference transmissionPolicy : TransmissionPolicy

  Class ChannelSend -> ChannelAccess

  Class ChannelReceive -> ChannelAccess
    Attribute receiveOperation : ReceiveOperation
    Attribute dataMustBeNew : EBoolean
    Attribute elementIndex : EInt
    Attribute lowerBound : EInt

  Class SemaphoreAccess -> CallGraphItem
    Reference semaphore : Semaphore<<1..1>>
    Attribute access : SemaphoreAccessEnum
    Attribute waitingBehaviour : WaitingBehaviour

  Class SenderReceiverCommunication -> CallGraphItem
    Attribute buffered : EBoolean
    Reference label : Label<<1..1>>
    Reference port : Port

  Class SenderReceiverRead -> SenderReceiverCommunication

  Class SenderReceiverWrite -> SenderReceiverCommunication
    Reference notifiedRunnables : Runnable<<0..*>>

  Class ServerCall -> CallGraphItem
    Reference serverRunnable : Runnable<<1..1>>
    Reference port : Port

  Class SynchronousServerCall -> ServerCall
    Attribute waitingBehaviour : WaitingBehaviour

  Class AsynchronousServerCall -> ServerCall
    Reference resultRunnable : Runnable

  Class GetResultServerCall -> ServerCall
    Attribute blockingType : BlockingType

  Class Group -> CallGraphItem, INamed, ICallGraphItemContainer
    Attribute ordered : EBoolean

  Class CallArgument -> ReferableObject
    Reference containingCall : RunnableCall
    Reference parameter : RunnableParameter
    Reference dependsOn : DataDependency
    Operation getName() : EString
    Operation computeUniqueName() : EString

  Class RunnableCall -> CallGraphItem, ITaggable
    Reference runnable : Runnable<<1..1>>
    Reference arguments : CallArgument<<0..*>>
    Reference statistic : RunEntityCallStatistic

  Class CustomEventTrigger -> CallGraphItem
    Reference event : CustomEvent<<1..1>>

  Class DataType

  Class CompoundType -> BaseObject, DataType

  Class Struct -> CompoundType
    Reference entries : StructEntry<<0..*>>

  Class StructEntry -> BaseObject, INamed
    Reference dataType : DataType

  Class Array -> CompoundType
    Attribute numberElements : EInt
    Reference dataType : DataType

  Class Pointer -> CompoundType
    Reference dataType : DataType

  Class TypeRef -> BaseObject, DataType
    Reference typeDef : TypeDefinition

  Class Alias -> BaseObject
    Attribute target : EString
    Attribute alias : EString

  Class TypeDefinition -> ReferableBaseObject
    Reference size : DataSize

  Class DataTypeDefinition -> TypeDefinition
    Reference dataType : DataType

  Class BaseTypeDefinition -> TypeDefinition
    Reference aliases : Alias<<0..*>>

  Class Activation -> ReferableBaseObject, ITaggable

  Class PeriodicActivation -> Activation
    Reference min : Time
    Reference max : Time
    Reference recurrence : Time<<1..1>>
    Reference offset : Time<<1..1>>

  Class VariableRateActivation -> Activation
    Attribute description : EString
    Reference step : Time<<1..1>>
    Reference occurrencesPerStep : IContinuousValueDeviation<<1..1>>

  Class SporadicActivation -> Activation
    Attribute description : EString
    Reference occurrence : ITimeDeviation<<1..1>>

  Class SingleActivation -> Activation
    Reference min : Time
    Reference max : Time

  Class EventActivation -> Activation
    Reference triggeringEvents : TriggerEvent<<1..*>>
    Reference counter : Counter

  Class CustomActivation -> Activation
    Attribute description : EString

  Class LabelAccessStatistic -> BaseObject
    Reference value : NumericStatistic
    Reference cacheMisses : NumericStatistic

  Class RunEntityCallStatistic -> BaseObject
    Reference statistic : NumericStatistic

  Class MeasurementModel -> BaseObject
    Reference measurements : Measurement<<0..*>>

  Class Measurement -> BaseObject
    Reference runtimes : Time<<0..*>>
    Reference runtimeDeviation : ITimeDeviation

  Class EventChainMeasurement -> Measurement
    Reference eventChain : EventChain<<1..1>>

  Class TaskMeasurement -> Measurement
    Reference task : Task<<1..1>>

  Class RunnableMeasurement -> Measurement
    Reference runnable : Runnable<<1..1>>

  Enum RelationalOperator
    Literal _undefined_ = 0
    Literal EQUAL = 0
    Literal NOT_EQUAL = 0
    Literal LESS_THAN = 0
    Literal GREATER_THAN = 0

  Enum TimeUnit
    Literal _undefined_ = 0
    Literal s = 0
    Literal ms = 0
    Literal us = 0
    Literal ns = 0
    Literal ps = 0

  Enum FrequencyUnit
    Literal _undefined_ = 0
    Literal Hz = 0
    Literal kHz = 0
    Literal MHz = 0
    Literal GHz = 0

  Enum VoltageUnit
    Literal _undefined_ = 0
    Literal uV = 0
    Literal mV = 0
    Literal V = 0

  Enum DataSizeUnit
    Literal _undefined_ = 0
    Literal bit = 0
    Literal kbit = 0
    Literal Mbit = 0
    Literal Gbit = 0
    Literal Tbit = 0
    Literal Kibit = 0
    Literal Mibit = 0
    Literal Gibit = 0
    Literal Tibit = 0
    Literal B = 0
    Literal kB = 0
    Literal MB = 0
    Literal GB = 0
    Literal TB = 0
    Literal KiB = 0
    Literal MiB = 0
    Literal GiB = 0
    Literal TiB = 0

  Enum DataRateUnit
    Literal _undefined_ = 0
    Literal bitPerSecond = 0
    Literal kbitPerSecond = 0
    Literal MbitPerSecond = 0
    Literal GbitPerSecond = 0
    Literal TbitPerSecond = 0
    Literal KibitPerSecond = 0
    Literal MibitPerSecond = 0
    Literal GibitPerSecond = 0
    Literal TibitPerSecond = 0
    Literal BPerSecond = 0
    Literal kBPerSecond = 0
    Literal MBPerSecond = 0
    Literal GBPerSecond = 0
    Literal TBPerSecond = 0
    Literal KiBPerSecond = 0
    Literal MiBPerSecond = 0
    Literal GiBPerSecond = 0
    Literal TiBPerSecond = 0

  Enum SamplingType
    Literal default = 0
    Literal BestCase = 0
    Literal WorstCase = 0
    Literal AverageCase = 0
    Literal CornerCase = 0
    Literal Uniform = 0

  Enum InterfaceKind
    Literal _undefined_ = 0
    Literal provides = 0
    Literal requires = 0
    Literal provides_requires = 0

  Enum RunnableOrderType
    Literal _undefined_ = 0
    Literal successor = 0
    Literal immediateSuccessorStartSequence = 0
    Literal immediateSuccessorAnySequence = 0
    Literal immediateSuccessorEndSequence = 0

  Enum SynchronizationType
    Literal _undefined_ = 0
    Literal Stimulus = 0
    Literal Response = 0

  Enum MappingType
    Literal _undefined_ = 0
    Literal OneToOne = 0
    Literal Reaction = 0
    Literal UniqueReaction = 0

  Enum LatencyType
    Literal _undefined_ = 0
    Literal Age = 0
    Literal Reaction = 0

  Enum Severity
    Literal _undefined_ = 0
    Literal Cosmetic = 0
    Literal Minor = 0
    Literal Major = 0
    Literal Critical = 0

  Enum LimitType
    Literal _undefined_ = 0
    Literal UpperLimit = 0
    Literal LowerLimit = 0

  Enum TimeMetric
    Literal _undefined_ = 0
    Literal ActivateToActivate = 0
    Literal CoreExecutionTime = 0
    Literal EndToEnd = 0
    Literal EndToStart = 0
    Literal GrossExecutionTime = 0
    Literal Lateness = 0
    Literal MemoryAccessTime = 0
    Literal NetExecutionTime = 0
    Literal OsOverhead = 0
    Literal ParkingTime = 0
    Literal PollingTime = 0
    Literal ReadyTime = 0
    Literal ResponseTime = 0
    Literal RunningTime = 0
    Literal StartDelay = 0
    Literal StartToStart = 0
    Literal WaitingTime = 0

  Enum CountMetric
    Literal _undefined_ = 0
    Literal Activations = 0
    Literal BoundedMigrations = 0
    Literal CacheHit = 0
    Literal CacheMiss = 0
    Literal FullMigrations = 0
    Literal MtaLimitExceeding = 0
    Literal Preemptions = 0

  Enum PercentageMetric
    Literal _undefined_ = 0
    Literal CacheHitRatio = 0
    Literal CacheMissRatio = 0
    Literal CoreExecutionTimeRelative = 0
    Literal MemoryAccessTimeRelative = 0
    Literal NormalizedLateness = 0
    Literal NormalizedResponseTime = 0
    Literal OsOverheadRelative = 0

  Enum CPUPercentageMetric
    Literal _undefined_ = 0
    Literal CPUBuffering = 0
    Literal CPULoad = 0
    Literal CPUParking = 0
    Literal CPUPolling = 0
    Literal CPUReady = 0
    Literal CPURunning = 0
    Literal CPUWaiting = 0

  Enum FrequencyMetric
    Literal _undefined_ = 0
    Literal CacheHitFrequency = 0
    Literal CacheMissFrequency = 0

  Enum CoherencyDirection
    Literal _undefined_ = 0
    Literal input = 0
    Literal output = 0

  Enum ProcessEventType
    Literal _all_ = 0
    Literal activate = 0
    Literal deadline = 0
    Literal start = 0
    Literal resume = 0
    Literal preempt = 0
    Literal poll = 0
    Literal run = 0
    Literal wait = 0
    Literal poll_parking = 0
    Literal park = 0
    Literal release_parking = 0
    Literal release = 0
    Literal terminate = 0

  Enum RunnableEventType
    Literal _all_ = 0
    Literal start = 0
    Literal suspend = 0
    Literal resume = 0
    Literal terminate = 0

  Enum LabelEventType
    Literal _all_ = 0
    Literal read = 0
    Literal write = 0

  Enum ChannelEventType
    Literal _all_ = 0
    Literal send = 0
    Literal receive = 0

  Enum SemaphoreEventType
    Literal _all_ = 0
    Literal lock = 0
    Literal unlock = 0

  Enum ComponentEventType
    Literal _all_ = 0
    Literal start = 0
    Literal end = 0

  Enum MemoryType
    Literal _undefined_ = 0
    Literal DRAM = 0
    Literal SRAM = 0
    Literal FLASH = 0
    Literal PCM = 0

  Enum StructureType
    Literal _undefined_ = 0
    Literal System = 0
    Literal ECU = 0
    Literal Microcontroller = 0
    Literal SoC = 0
    Literal Cluster = 0
    Literal Group = 0
    Literal Array = 0
    Literal Area = 0
    Literal Region = 0

  Enum CacheType
    Literal _undefined_ = 0
    Literal instruction = 0
    Literal data = 0
    Literal unified = 0

  Enum PortType
    Literal _undefined_ = 0
    Literal initiator = 0
    Literal responder = 0

  Enum SchedPolicy
    Literal _undefined_ = 0
    Literal RoundRobin = 0
    Literal FCFS = 0
    Literal PriorityBased = 0

  Enum WriteStrategy
    Literal _undefined_ = 0
    Literal none = 0
    Literal writeback = 0
    Literal writethrough = 0

  Enum PuType
    Literal _undefined_ = 0
    Literal GPU = 0
    Literal CPU = 0
    Literal Accelerator = 0

  Enum PortInterface
    Literal _undefined_ = 0
    Literal custom = 0
    Literal CAN = 0
    Literal Flexray = 0
    Literal LIN = 0
    Literal MOST = 0
    Literal Ethernet = 0
    Literal SPI = 0
    Literal I2C = 0
    Literal AXI = 0
    Literal AHB = 0
    Literal APB = 0
    Literal SWR = 0

  Enum HwFeatureType
    Literal _undefined_ = 0
    Literal performance = 0
    Literal power = 0
    Literal performance_and_power = 0

  Enum MemoryAddressMappingType
    Literal _undefined_ = 0
    Literal none = 0
    Literal address = 0
    Literal offset = 0

  Enum OsDataConsistencyMode
    Literal _undefined_ = 0
    Literal noProtection = 0
    Literal automaticProtection = 0
    Literal customProtection = 0
    Literal handledByModelElements = 0

  Enum AccessMultiplicity
    Literal _undefined_ = 0
    Literal singleAccess = 0
    Literal multipleAccesses = 0

  Enum DataStabilityLevel
    Literal _undefined_ = 0
    Literal period = 0
    Literal process = 0
    Literal scheduleSection = 0
    Literal runnable = 0

  Enum SemaphoreType
    Literal _undefined_ = 0
    Literal CountingSemaphore = 0
    Literal Resource = 0
    Literal Spinlock = 0

  Enum Condition
    Literal _undefined_ = 0
    Literal requires = 0
    Literal excludes = 0

  Enum GroupingType
    Literal _undefined_ = 0
    Literal allOfThem = 0
    Literal atLeastOneOfThem = 0

  Enum CurveType
    Literal _undefined_ = 0
    Literal sine = 0
    Literal triangle = 0

  Enum WaitEventType
    Literal _undefined_ = 0
    Literal AND = 0
    Literal OR = 0

  Enum WaitingBehaviour
    Literal _undefined_ = 0
    Literal active = 0
    Literal passive = 0

  Enum ISRCategory
    Literal _undefined_ = 0
    Literal CATEGORY_1 = 0
    Literal CATEGORY_2 = 0

  Enum AccessPrecedenceType
    Literal _undefined_ = 0
    Literal defaultWR = 0
    Literal ignoreWR = 0
    Literal enforceRW = 0

  Enum OrderType
    Literal _undefined_ = 0
    Literal order = 0
    Literal directOrder = 0
    Literal startSequence = 0
    Literal endSequence = 0

  Enum DirectionType
    Literal _undefined_ = 0
    Literal in = 0
    Literal out = 0
    Literal inout = 0

  Enum LabelDataStability
    Literal _undefined_ = 0
    Literal noProtection = 0
    Literal automaticProtection = 0
    Literal customProtection = 0
    Literal handledByModelElements = 0

  Enum ModeLabelAccessEnum
    Literal _undefined_ = 0
    Literal read = 0
    Literal set = 0
    Literal increment = 0
    Literal decrement = 0

  Enum ReceiveOperation
    Literal _undefined_ = 0
    Literal FIFO_Read = 0
    Literal FIFO_Take = 0
    Literal LIFO_Read = 0
    Literal LIFO_Take = 0

  Enum LabelAccessDataStability
    Literal _undefined_ = 0
    Literal inherited = 0
    Literal noProtection = 0
    Literal automaticProtection = 0
    Literal customProtection = 0
    Literal handledByModelElements = 0

  Enum LabelAccessEnum
    Literal _undefined_ = 0
    Literal read = 0
    Literal write = 0

  Enum LabelAccessImplementation
    Literal _undefined_ = 0
    Literal explicit = 0
    Literal implicit = 0
    Literal timed = 0

  Enum SemaphoreAccessEnum
    Literal _undefined_ = 0
    Literal request = 0
    Literal exclusive = 0
    Literal release = 0

  Enum BlockingType
    Literal _undefined_ = 0
    Literal active_wait = 0
    Literal passive_wait = 0
    Literal non_blocking = 0

  Enum Preemption
    Literal _undefined_ = 0
    Literal preemptive = 0
    Literal cooperative = 0
    Literal non_preemptive = 0

  Enum ConcurrencyType
    Literal _undefined_ = 0
    Literal SingleCoreSafe = 0
    Literal MultiCoreSafe = 0
    Literal SingleCorePrioSafe = 0

  Enum ASILType
    Literal _undefined_ = 0
    Literal D = 0
    Literal C = 0
    Literal B = 0
    Literal A = 0
    Literal QM = 0

  DataType Address <long>

  DataType PositiveInt <int>

  DataType PositiveLong <long>

  DataType PositiveDouble <double>

  DataType NonNegativeDouble <double>
