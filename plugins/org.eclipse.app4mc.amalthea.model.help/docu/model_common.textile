
h1. Common Model

The AMALTHEA common model is not a model by itself, but provides standard elements used by other models as containments.
The namespace of the model is "http://app4mc.eclipse.org/amalthea/0.7.0/common".

h2. Time and Time Unit

The AMALTHEA data model includes two common elements to describe time ranges in an easy way, the __Time__ and __SignedTime__ element. The __SignedTime__ is like the general __Time__ class but explicit allows defining negative time values.
These elements can be referenced by any other element for specifying attributes to store time information.
Time units are needed to describe different timing behavior and requirements, like deadlines or offsets of components.
To support different time ranges, especially different time units, AMALTHEA predefines these types like seconds, milli-seconds, micro-seconds,  nano-seconds or pico-seconds.

!(#scale)../pictures/model_common_time.png!


h2. Frequency and Frequency Unit

!(#scale)../pictures/model_common_frequency.png!


h2. Data Unit

The __DataUnit__ contains the size in bits and provides convenience methods to set and get the
size also in bytes. It is internally converted from bits to bytes and can be set and retrieved in both ways.

!(#scale)../pictures/model_common_data_unit.png! 


h2. Interfaces and base objects

Several interfaces and abstract classes are defined in the common model.
They provide basic common functionality for all objects, which are extending it, like the possibility to add __CustomAttributes__ or __Tags__. Tags are available at different elements with the purpose to group them together or to annotate them.

!(#scale)../pictures/model_common_interfaces_base_objects.png!


h2(#CP). Custom Properties

The __CustomProperty__ element is used to define own, in AMALTHEA not available properties. If there is the need to extend an element or to store tool information related to processing steps, __CustomProperties__ can be used to store this type of information.
The elements are stored in a __HashMap__. The values can be of different types as shown in the structure picture, like String, Integer, Boolean...
In addition a __ReferenceObject__ is available to store own references to other __EObject__ elements.
The __ListObject__ can be used to store multi-valued custom properties.

!(#scale)../pictures/model_common_custom_property_value.png!


h2. Deviation

The __Deviation__ class is used to model statistical distributions within AMALTHEA.
There is a wide variety of possible use cases, where such a distribution is needed.
With such a deviation for example, the variation in run times of functions or respectively their instructions can be imitated.  
Therefore, AMALTHEA currently supports the following three statistical distributions:

!(#scale)../pictures/model_common_deviation.png!

h3. Uniform Distribution

The uniform distribution is a statistical distribution where the values between the stated lower and upper bound are equally likely to be observed.

!../pictures/model_common_deviation_uniform.png!

h3. Gaussian/Normal Distribution

The Gaussian/normal distribution is a statistical distribution where the values decrease symmetrically. The maximum value and thus its location is thereby stated by the mean and the rate of decrease is defined by its standard deviation. Since the curves approach zero on either side, an additional upper and lower bound can be added to constraint the values.

!../pictures/model_common_deviation_normal.png!

h3. Weibull Distribution

The Weibull distribution is a statistical distribution whose shape is defined by kappa > 0 and the scale of the distribution by lambda > 0. That way, the Weibull distribution can also be used to model other distributions like for example the exponential or normal distribution. Since the curves can approach zero or infinity on either side, an additional upper and lower bound can be added to constraint the values. Alternatively, the Weibull distribution can also be parameterized using the mean value and a parameter that constraints the distribution regarding the per mill of remaining values.

!../pictures/model_common_deviation_weibull.png!

h2. Statistic Elements

The contained elements are representing statistical values.
The values can be set either with a min, avg and max representation using the __MinAvgMaxStatistic__ element.
The other possibility is to set a single value using the __SingleValueStatistic__ element.
The values itself are set as a normal __int__ value or in case of the single value as __float__.

!../pictures/model_common_statistic.png!

