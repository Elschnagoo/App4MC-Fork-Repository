
h2. PropertyConstraints Model

The scope of the Property Constraints model is to limit the design space by providing information about the specific hardware properties that parts of the software rely on, i.e. what properties or features have to be supplied by the respective hardware in order to be a valid mapping or allocation target.

This information comprises
* Core allocation constraints, which describe the constraints on cores.
* Memory mapping constraints, which describe the constraints on memories.


h3. Structure

The figure below shows the Property Constraints model. In order to provide a better understanding of the model, interconnections between software model elements are not shown in this figure.

!../pictures/model_propertyconstraints_overview.png!


h3. CoreAllocationConstraint

The __CoreAllocationConstraint__ is an abstract class for describing constraints which affect the selection of a suitable __Core__.


h4. RunnableAllocationConstraint

The __RunnableAllocationConstraint__ is a specialization of the __CoreAllocationConstraint__. It is used to specify constraints on __Core__ elements which are used in __Runnable__ to __Core__ allocations.


h4. ProcessAllocationConstraint

The __ProcessAllocationConstraint__ is a specialization of the __CoreAllocationConstraint__. It is used to specify constraints on __Core__ elements which are used in the allocation of Process's specializations (i.e. __Task__ and __ISR__), to __Cores__.


h4. ProcessPrototypeAllocationConstraint

Tha same as ProcessAllocationConstraint but for process prototypes in an earlier phase of the development.


h3. MemoryMappingConstraint

The __MemoryMappingConstraint__ is an abstract class for describing constraints which affect the selection of a suitable __Memory__. The actual constraint on the core is described by the __AbstractElementMappingConstraint__.


h4. AbstractElementMappingConstraint

The __AbstractElementMappingConstaint__ is a specialization of the __MappingConstraint__. It is used to specify constraints on __Memory__ elements which are used in the mapping of __AbstractMemoryElement__ specializations (i.e. __Label__, __Runnable__, __TaskPrototype__ or __Process__) to __Memories__.


h3. Classifications

The specializations __CoreClassification__ and __MemoryClassification__ are used to describe the features that a hardware element (__Core__ or __Memory__) needs to provide in order to be a valid target. This is done by references to Classifiers, conditions (requires vs. excludes) and the kind of grouping (all of them vs. at least one of them).


h3. Example

!../pictures/model_propertyconstraints_example.png!

