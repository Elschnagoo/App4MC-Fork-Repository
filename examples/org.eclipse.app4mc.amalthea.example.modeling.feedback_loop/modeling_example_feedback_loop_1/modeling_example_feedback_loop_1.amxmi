<?xml version="1.0" encoding="UTF-8"?>
<am:Amalthea xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:am="http://app4mc.eclipse.org/amalthea/0.8.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <swModel>
    <tasks name="Task_1" priority="3" stimuli="Stimulus_Task_1?type=Periodic" osekTaskGroup="3" preemption="preemptive" multipleTaskActivationLimit="1">
      <callGraph>
        <graphEntries xsi:type="am:ModeSwitch" valueProvider="e?type=ModeLabel">
          <entries values="E/E_0?type=ModeLiteral">
            <items xsi:type="am:CallSequence" name="CS_e_0">
              <calls xsi:type="am:TaskRunnableCall" runnable="Set_u_0?type=Runnable"/>
            </items>
          </entries>
          <entries values="E/E_1?type=ModeLiteral">
            <items xsi:type="am:CallSequence" name="CS_e_1">
              <calls xsi:type="am:TaskRunnableCall" runnable="Set_u_1?type=Runnable"/>
            </items>
          </entries>
        </graphEntries>
        <graphEntries xsi:type="am:CallSequence" name="CS_R1">
          <calls xsi:type="am:TaskRunnableCall" runnable="R1?type=Runnable"/>
        </graphEntries>
      </callGraph>
    </tasks>
    <tasks name="Task_2" priority="2" stimuli="Stimulus_Task_2?type=Periodic" osekTaskGroup="2" preemption="preemptive" multipleTaskActivationLimit="1">
      <callGraph>
        <graphEntries xsi:type="am:ModeSwitch" valueProvider="state?type=ModeLabel">
          <entries values="State/State_0?type=ModeLiteral">
            <items xsi:type="am:CallSequence" name="CS_state_0">
              <calls xsi:type="am:TaskRunnableCall" runnable="Set_y_0?type=Runnable"/>
              <calls xsi:type="am:TaskRunnableCall" runnable="Set_w_0?type=Runnable"/>
            </items>
            <items xsi:type="am:ModeSwitch" valueProvider="u?type=ModeLabel">
              <entries values="U/U_0?type=ModeLiteral">
                <items xsi:type="am:CallSequence" name="CS_0_to_0">
                  <calls xsi:type="am:TaskRunnableCall" runnable="Set_state_0?type=Runnable"/>
                </items>
              </entries>
              <entries values="U/U_1?type=ModeLiteral">
                <items xsi:type="am:CallSequence" name="CS_0_to_1">
                  <calls xsi:type="am:TaskRunnableCall" runnable="Set_state_1?type=Runnable"/>
                </items>
              </entries>
            </items>
          </entries>
          <entries values="State/State_1?type=ModeLiteral">
            <items xsi:type="am:CallSequence" name="CS_state_1">
              <calls xsi:type="am:TaskRunnableCall" runnable="Set_y_50?type=Runnable"/>
              <calls xsi:type="am:TaskRunnableCall" runnable="Set_w_50?type=Runnable"/>
            </items>
            <items xsi:type="am:ModeSwitch" valueProvider="u?type=ModeLabel">
              <entries values="U/U_0?type=ModeLiteral">
                <items xsi:type="am:CallSequence" name="CS_1_to_0">
                  <calls xsi:type="am:TaskRunnableCall" runnable="Set_state_0?type=Runnable"/>
                </items>
              </entries>
              <entries values="U/U_1?type=ModeLiteral">
                <items xsi:type="am:CallSequence" name="CS_1_to_2">
                  <calls xsi:type="am:TaskRunnableCall" runnable="Set_state_2?type=Runnable"/>
                </items>
              </entries>
            </items>
          </entries>
          <entries values="State/State_2?type=ModeLiteral">
            <items xsi:type="am:CallSequence" name="CS_state_2">
              <calls xsi:type="am:TaskRunnableCall" runnable="Set_y_100?type=Runnable"/>
              <calls xsi:type="am:TaskRunnableCall" runnable="Set_w_100?type=Runnable"/>
            </items>
            <items xsi:type="am:ModeSwitch" valueProvider="u?type=ModeLabel">
              <entries values="U/U_0?type=ModeLiteral">
                <items xsi:type="am:CallSequence" name="CS_2_to_1">
                  <calls xsi:type="am:TaskRunnableCall" runnable="Set_state_1?type=Runnable"/>
                </items>
              </entries>
              <entries values="U/U_1?type=ModeLiteral">
                <items xsi:type="am:CallSequence" name="CS_2_to_2">
                  <calls xsi:type="am:TaskRunnableCall" runnable="Set_state_2?type=Runnable"/>
                </items>
              </entries>
            </items>
          </entries>
        </graphEntries>
        <graphEntries xsi:type="am:ProbabilitySwitch">
          <entries probability="0.3">
            <items xsi:type="am:CallSequence" name="CS_Trigger_Task_4">
              <calls xsi:type="am:InterProcessActivation" stimulus="IPA_Task_4?type=InterProcess"/>
            </items>
          </entries>
          <entries probability="0.7">
            <items xsi:type="am:CallSequence" name="CS_w_notrigger"/>
          </entries>
        </graphEntries>
        <graphEntries xsi:type="am:CallSequence" name="CS_R2">
          <calls xsi:type="am:TaskRunnableCall" runnable="R2?type=Runnable"/>
        </graphEntries>
      </callGraph>
    </tasks>
    <tasks name="Task_3" priority="1" stimuli="Stimulus_Task_3?type=Periodic" osekTaskGroup="1" preemption="preemptive" multipleTaskActivationLimit="1">
      <callGraph>
        <graphEntries xsi:type="am:ModeSwitch" valueProvider="y?type=ModeLabel">
          <entries values="Y/Y_0?type=ModeLiteral">
            <items xsi:type="am:CallSequence" name="CS_y_0">
              <calls xsi:type="am:TaskRunnableCall" runnable="R_3_0?type=Runnable"/>
            </items>
          </entries>
          <entries values="Y/Y_50?type=ModeLiteral">
            <items xsi:type="am:CallSequence" name="CS_y_1">
              <calls xsi:type="am:TaskRunnableCall" runnable="R_3_1?type=Runnable"/>
            </items>
          </entries>
          <entries values="Y/Y_100?type=ModeLiteral">
            <items xsi:type="am:CallSequence" name="CS_y_2">
              <calls xsi:type="am:TaskRunnableCall" runnable="R_3_2?type=Runnable"/>
            </items>
          </entries>
        </graphEntries>
      </callGraph>
    </tasks>
    <tasks name="Task_4" priority="1" stimuli="IPA_Task_4?type=InterProcess" osekTaskGroup="1" preemption="preemptive" multipleTaskActivationLimit="1">
      <callGraph>
        <graphEntries xsi:type="am:ModeSwitch" valueProvider="w?type=ModeLabel">
          <entries values="W/W_0?type=ModeLiteral">
            <items xsi:type="am:ProbabilitySwitch">
              <entries probability="0.3">
                <items xsi:type="am:CallSequence" name="CS_w_0_e_0">
                  <calls xsi:type="am:TaskRunnableCall" runnable="Set_e_0?type=Runnable"/>
                </items>
              </entries>
              <entries probability="0.7">
                <items xsi:type="am:CallSequence" name="CS_w_0_e_1">
                  <calls xsi:type="am:TaskRunnableCall" runnable="Set_e_1?type=Runnable"/>
                </items>
              </entries>
            </items>
          </entries>
          <entries values="W/W_50?type=ModeLiteral">
            <items xsi:type="am:ProbabilitySwitch">
              <entries probability="0.5">
                <items xsi:type="am:CallSequence" name="CS_w_50_e_0">
                  <calls xsi:type="am:TaskRunnableCall" runnable="Set_e_0?type=Runnable"/>
                </items>
              </entries>
              <entries probability="0.5">
                <items xsi:type="am:CallSequence" name="CS_w_50_e_1">
                  <calls xsi:type="am:TaskRunnableCall" runnable="Set_e_1?type=Runnable"/>
                </items>
              </entries>
            </items>
          </entries>
          <entries values="W/W_100?type=ModeLiteral">
            <items xsi:type="am:ProbabilitySwitch">
              <entries probability="0.7">
                <items xsi:type="am:CallSequence" name="CS_w_100_e_0">
                  <calls xsi:type="am:TaskRunnableCall" runnable="Set_e_0?type=Runnable"/>
                </items>
              </entries>
              <entries probability="0.3">
                <items xsi:type="am:CallSequence" name="CS_w_100_e_1">
                  <calls xsi:type="am:TaskRunnableCall" runnable="Set_e_1?type=Runnable"/>
                </items>
              </entries>
            </items>
          </entries>
        </graphEntries>
        <graphEntries xsi:type="am:CallSequence" name="CS_Task_4_Post">
          <calls xsi:type="am:TaskRunnableCall" runnable="R_4?type=Runnable"/>
        </graphEntries>
      </callGraph>
    </tasks>
    <runnables name="Set_e_0" callback="false" service="false">
      <runnableItems xsi:type="am:ModeLabelAccess" data="e?type=ModeLabel" access="write" modeValue="E/E_0?type=ModeLiteral"/>
    </runnables>
    <runnables name="Set_e_1" callback="false" service="false">
      <runnableItems xsi:type="am:ModeLabelAccess" data="e?type=ModeLabel" access="write" modeValue="E/E_1?type=ModeLiteral"/>
    </runnables>
    <runnables name="Set_state_0" callback="false" service="false">
      <runnableItems xsi:type="am:ModeLabelAccess" data="state?type=ModeLabel" access="write" modeValue="State/State_0?type=ModeLiteral"/>
    </runnables>
    <runnables name="Set_state_1" callback="false" service="false">
      <runnableItems xsi:type="am:ModeLabelAccess" data="state?type=ModeLabel" access="write" modeValue="State/State_1?type=ModeLiteral"/>
    </runnables>
    <runnables name="Set_state_2" callback="false" service="false">
      <runnableItems xsi:type="am:ModeLabelAccess" data="state?type=ModeLabel" access="write" modeValue="State/State_2?type=ModeLiteral"/>
    </runnables>
    <runnables name="Set_y_0" callback="false" service="false">
      <runnableItems xsi:type="am:ModeLabelAccess" data="y?type=ModeLabel" access="write" modeValue="Y/Y_0?type=ModeLiteral"/>
    </runnables>
    <runnables name="Set_y_50" callback="false" service="false">
      <runnableItems xsi:type="am:ModeLabelAccess" data="y?type=ModeLabel" access="write" modeValue="Y/Y_50?type=ModeLiteral"/>
    </runnables>
    <runnables name="Set_y_100" callback="false" service="false">
      <runnableItems xsi:type="am:ModeLabelAccess" data="y?type=ModeLabel" access="write" modeValue="Y/Y_100?type=ModeLiteral"/>
    </runnables>
    <runnables name="R_3_0" callback="false" service="false">
      <runnableItems xsi:type="am:RunnableInstructions">
        <default xsi:type="am:InstructionsDeviation">
          <deviation>
            <lowerBound xsi:type="am:LongObject" value="594000"/>
            <upperBound xsi:type="am:LongObject" value="600000"/>
            <distribution xsi:type="am:UniformDistribution"/>
          </deviation>
        </default>
      </runnableItems>
    </runnables>
    <runnables name="R_3_2" callback="false" service="false">
      <runnableItems xsi:type="am:RunnableInstructions">
        <default xsi:type="am:InstructionsDeviation">
          <deviation>
            <lowerBound xsi:type="am:LongObject" value="59400000"/>
            <upperBound xsi:type="am:LongObject" value="60000000"/>
            <distribution xsi:type="am:UniformDistribution"/>
          </deviation>
        </default>
      </runnableItems>
    </runnables>
    <runnables name="R_3_1" callback="false" service="false">
      <runnableItems xsi:type="am:RunnableInstructions">
        <default xsi:type="am:InstructionsDeviation">
          <deviation>
            <lowerBound xsi:type="am:LongObject" value="5940000"/>
            <upperBound xsi:type="am:LongObject" value="6000000"/>
            <distribution xsi:type="am:UniformDistribution"/>
          </deviation>
        </default>
      </runnableItems>
    </runnables>
    <runnables name="Set_w_0" callback="false" service="false">
      <runnableItems xsi:type="am:ModeLabelAccess" data="w?type=ModeLabel" access="write" modeValue="W/W_0?type=ModeLiteral"/>
    </runnables>
    <runnables name="Set_w_50" callback="false" service="false">
      <runnableItems xsi:type="am:ModeLabelAccess" data="w?type=ModeLabel" access="write" modeValue="W/W_50?type=ModeLiteral"/>
    </runnables>
    <runnables name="Set_w_100" callback="false" service="false">
      <runnableItems xsi:type="am:ModeLabelAccess" data="w?type=ModeLabel" access="write" modeValue="W/W_100?type=ModeLiteral"/>
    </runnables>
    <runnables name="Set_u_0" callback="false" service="false">
      <runnableItems xsi:type="am:ModeLabelAccess" data="u?type=ModeLabel" access="write" modeValue="U/U_0?type=ModeLiteral"/>
    </runnables>
    <runnables name="Set_u_1" callback="false" service="false">
      <runnableItems xsi:type="am:ModeLabelAccess" data="u?type=ModeLabel" access="write" modeValue="U/U_1?type=ModeLiteral"/>
    </runnables>
    <runnables name="R1" callback="false" service="false">
      <runnableItems xsi:type="am:RunnableInstructions">
        <default xsi:type="am:InstructionsDeviation">
          <deviation>
            <lowerBound xsi:type="am:LongObject" value="5940000"/>
            <upperBound xsi:type="am:LongObject" value="6000000"/>
            <distribution xsi:type="am:UniformDistribution"/>
          </deviation>
        </default>
      </runnableItems>
    </runnables>
    <runnables name="R2" callback="false" service="false">
      <runnableItems xsi:type="am:RunnableInstructions">
        <default xsi:type="am:InstructionsDeviation">
          <deviation>
            <lowerBound xsi:type="am:LongObject" value="594000"/>
            <upperBound xsi:type="am:LongObject" value="600000"/>
            <distribution xsi:type="am:UniformDistribution"/>
          </deviation>
        </default>
      </runnableItems>
    </runnables>
    <runnables name="R_4" callback="false" service="false">
      <runnableItems xsi:type="am:RunnableInstructions">
        <default xsi:type="am:InstructionsDeviation">
          <deviation>
            <lowerBound xsi:type="am:LongObject" value="5940000"/>
            <upperBound xsi:type="am:LongObject" value="6000000"/>
            <distribution xsi:type="am:UniformDistribution"/>
          </deviation>
        </default>
      </runnableItems>
    </runnables>
    <modes name="E">
      <literals name="E_0">
        <customProperties key="enumValue">
          <value xsi:type="am:LongObject" value="0"/>
        </customProperties>
      </literals>
      <literals name="E_1">
        <customProperties key="enumValue">
          <value xsi:type="am:LongObject" value="1"/>
        </customProperties>
      </literals>
    </modes>
    <modes name="U">
      <literals name="U_0">
        <customProperties key="enumValue">
          <value xsi:type="am:LongObject" value="0"/>
        </customProperties>
      </literals>
      <literals name="U_1">
        <customProperties key="enumValue">
          <value xsi:type="am:LongObject" value="1"/>
        </customProperties>
      </literals>
    </modes>
    <modes name="Y">
      <literals name="Y_0">
        <customProperties key="enumValue">
          <value xsi:type="am:LongObject" value="0"/>
        </customProperties>
      </literals>
      <literals name="Y_50">
        <customProperties key="enumValue">
          <value xsi:type="am:LongObject" value="50"/>
        </customProperties>
      </literals>
      <literals name="Y_100">
        <customProperties key="enumValue">
          <value xsi:type="am:LongObject" value="100"/>
        </customProperties>
      </literals>
    </modes>
    <modes name="W">
      <literals name="W_0">
        <customProperties key="enumValue">
          <value xsi:type="am:LongObject" value="0"/>
        </customProperties>
      </literals>
      <literals name="W_50">
        <customProperties key="enumValue">
          <value xsi:type="am:LongObject" value="50"/>
        </customProperties>
      </literals>
      <literals name="W_100">
        <customProperties key="enumValue">
          <value xsi:type="am:LongObject" value="100"/>
        </customProperties>
      </literals>
    </modes>
    <modes name="State">
      <literals name="State_0">
        <customProperties key="enumValue">
          <value xsi:type="am:LongObject" value="0"/>
        </customProperties>
      </literals>
      <literals name="State_1">
        <customProperties key="enumValue">
          <value xsi:type="am:LongObject" value="1"/>
        </customProperties>
      </literals>
      <literals name="State_2">
        <customProperties key="enumValue">
          <value xsi:type="am:LongObject" value="2"/>
        </customProperties>
      </literals>
    </modes>
    <modeLabels name="e" initialValue="E/E_0?type=ModeLiteral">
      <size value="1" unit="bit"/>
    </modeLabels>
    <modeLabels name="y" initialValue="Y/Y_0?type=ModeLiteral">
      <size value="8" unit="bit"/>
    </modeLabels>
    <modeLabels name="w" initialValue="W/W_0?type=ModeLiteral">
      <size value="8" unit="bit"/>
    </modeLabels>
    <modeLabels name="u" initialValue="U/U_0?type=ModeLiteral">
      <size value="1" unit="bit"/>
    </modeLabels>
    <modeLabels name="state" initialValue="State/State_0?type=ModeLiteral">
      <size value="8" unit="bit"/>
    </modeLabels>
  </swModel>
  <hwModel>
    <mcTypes name="GENERIC"/>
    <coreTypes name="Core_1_type" bitWidth="0" instructionsPerCycle="1"/>
    <system>
      <ecus name="Ecu_1">
        <quartzes name="Quartz_1" type="STATIC">
          <frequency value="6.0E8"/>
        </quartzes>
        <microcontrollers name="Processor_1" microcontrollerType="GENERIC?type=MicrocontrollerType">
          <memories name="Memory_1">
            <customProperties key="attribute#MemoryType">
              <value xsi:type="am:StringObject" value="AbstractMemory"/>
            </customProperties>
            <ports xsi:type="am:ComplexPort" name="Memory_1_port" master="false" bitWidth="16" baseAddress="0" addressRange="0" writeCycles="12" readCycles="12" schedValue="0"/>
          </memories>
          <cores name="Core_1" coreType="Core_1_type?type=CoreType" lockstepGroup="0">
            <customProperties key="attribute#memoryArbiterPriority">
              <value xsi:type="am:LongObject" value="0"/>
            </customProperties>
            <prescaler name="Core_1_prescaler" clockRatio="0.0" quartz="Quartz_1?type=Quartz"/>
          </cores>
        </microcontrollers>
      </ecus>
    </system>
  </hwModel>
  <osModel>
    <operatingSystems name="Generic_OS">
      <taskSchedulers name="Scheduler_1" scheduleUnitPriority="0">
        <schedulingUnit xsi:type="am:SchedulingHWUnit">
          <delay value="0" unit="ns"/>
        </schedulingUnit>
        <schedulingAlgorithm xsi:type="am:OSEK"/>
      </taskSchedulers>
      <osDataConsistency mode="noProtection"/>
    </operatingSystems>
  </osModel>
  <stimuliModel>
    <stimuli xsi:type="am:Periodic" name="Stimulus_Task_1">
      <offset value="0" unit="ms"/>
      <recurrence value="600" unit="ms"/>
    </stimuli>
    <stimuli xsi:type="am:Periodic" name="Stimulus_Task_2">
      <offset value="20" unit="ms"/>
      <recurrence value="300" unit="ms"/>
    </stimuli>
    <stimuli xsi:type="am:Periodic" name="Stimulus_Task_3">
      <offset value="50" unit="ms"/>
      <recurrence value="500" unit="ms"/>
    </stimuli>
    <stimuli xsi:type="am:InterProcess" name="IPA_Task_4"/>
  </stimuliModel>
  <constraintsModel/>
  <eventModel>
    <events xsi:type="am:ProcessEvent" name="Event_Task_1" entity="Task_1?type=Task"/>
    <events xsi:type="am:ProcessEvent" name="Event_Task_2" entity="Task_2?type=Task"/>
    <events xsi:type="am:ProcessEvent" name="Event_Task_3" entity="Task_3?type=Task"/>
    <events xsi:type="am:ProcessEvent" name="Event_Task_4" entity="Task_4?type=Task"/>
    <events xsi:type="am:RunnableEvent" name="Event_R_3_0" entity="R_3_0?type=Runnable"/>
    <events xsi:type="am:RunnableEvent" name="Event_R_3_1" entity="R_3_1?type=Runnable"/>
    <events xsi:type="am:RunnableEvent" name="Event_R_3_2" entity="R_3_2?type=Runnable"/>
    <events xsi:type="am:RunnableEvent" name="Event_R_4" entity="R_4?type=Runnable"/>
    <events xsi:type="am:RunnableEvent" name="Event_R1" entity="R1?type=Runnable"/>
    <events xsi:type="am:RunnableEvent" name="Event_R2" entity="R2?type=Runnable"/>
    <events xsi:type="am:RunnableEvent" name="Event_Set_e_0" entity="Set_e_0?type=Runnable"/>
    <events xsi:type="am:RunnableEvent" name="Event_Set_e_1" entity="Set_e_1?type=Runnable"/>
    <events xsi:type="am:RunnableEvent" name="Event_Set_state_0" entity="Set_state_0?type=Runnable"/>
    <events xsi:type="am:RunnableEvent" name="Event_Set_state_1" entity="Set_state_1?type=Runnable"/>
    <events xsi:type="am:RunnableEvent" name="Event_Set_state_2" entity="Set_state_2?type=Runnable"/>
    <events xsi:type="am:RunnableEvent" name="Event_Set_u_0" entity="Set_u_0?type=Runnable"/>
    <events xsi:type="am:RunnableEvent" name="Event_Set_u_1" entity="Set_u_1?type=Runnable"/>
    <events xsi:type="am:RunnableEvent" name="Event_Set_w_0" entity="Set_w_0?type=Runnable"/>
    <events xsi:type="am:RunnableEvent" name="Event_Set_w_50" entity="Set_w_50?type=Runnable"/>
    <events xsi:type="am:RunnableEvent" name="Event_Set_w_100" entity="Set_w_100?type=Runnable"/>
    <events xsi:type="am:RunnableEvent" name="Event_Set_y_0" entity="Set_y_0?type=Runnable"/>
    <events xsi:type="am:RunnableEvent" name="Event_Set_y_50" entity="Set_y_50?type=Runnable"/>
    <events xsi:type="am:RunnableEvent" name="Event_Set_y_100" entity="Set_y_100?type=Runnable"/>
    <events xsi:type="am:StimulusEvent" name="Event_Stimulus_Task_1" entity="Stimulus_Task_1?type=Periodic"/>
    <events xsi:type="am:StimulusEvent" name="Event_Stimulus_Task_2" entity="Stimulus_Task_2?type=Periodic"/>
    <events xsi:type="am:StimulusEvent" name="Event_Stimulus_Task_3" entity="Stimulus_Task_3?type=Periodic"/>
    <events xsi:type="am:StimulusEvent" name="Event_IPA_Task_4" entity="IPA_Task_4?type=InterProcess"/>
  </eventModel>
  <mappingModel addressMappingType="offset">
    <taskAllocation task="Task_1?type=Task" scheduler="Scheduler_1?type=TaskScheduler" priority="0"/>
    <taskAllocation task="Task_2?type=Task" scheduler="Scheduler_1?type=TaskScheduler" priority="0"/>
    <taskAllocation task="Task_3?type=Task" scheduler="Scheduler_1?type=TaskScheduler" priority="0"/>
    <taskAllocation task="Task_4?type=Task" scheduler="Scheduler_1?type=TaskScheduler" priority="0"/>
    <coreAllocation scheduler="Scheduler_1?type=TaskScheduler" core="Core_1?type=Core"/>
    <memoryMapping memory="Memory_1?type=Memory" memoryPositionAddress="0" abstractElement="u?type=ModeLabel"/>
    <memoryMapping memory="Memory_1?type=Memory" memoryPositionAddress="1" abstractElement="e?type=ModeLabel"/>
    <memoryMapping memory="Memory_1?type=Memory" memoryPositionAddress="2" abstractElement="y?type=ModeLabel"/>
    <memoryMapping memory="Memory_1?type=Memory" memoryPositionAddress="10" abstractElement="w?type=ModeLabel"/>
    <memoryMapping memory="Memory_1?type=Memory" memoryPositionAddress="18" abstractElement="state?type=ModeLabel"/>
  </mappingModel>
  <componentsModel/>
</am:Amalthea>
